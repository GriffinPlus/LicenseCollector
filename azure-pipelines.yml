trigger:
  tags:
    include:
    - v*
  branches:
    include:
    - master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  # runtime identifiers (see https://docs.microsoft.com/en-us/dotnet/core/rid-catalog)
  targets: 'win10-x86,win10-x64'

steps:
- task: GitVersion@5
  inputs:
    runtime: 'core'
  displayName: 'Determine Version Number'

- task: NuGetToolInstaller@1
  displayName: Install NuGet
  
- task: NuGetCommand@2
  displayName: Restore NuGet Packages
  inputs:
    restoreSolution: '$(solution)'

- powershell: |
    $env:DOTNET_CLI_TELEMETRY_OPTOUT = 'true'
    foreach ($target in '$(targets)'.Split(',')) {
        dotnet publish `
            -c $(buildConfiguration) `
            -r $target `
            -o "$(Build.ArtifactStagingDirectory)/$target" `
            /p:TargetFramework=netcoreapp3.1 `
            /p:PublishSingleFile=true `
            /p:PublishTrimmed=true
    }
  displayName: Build
  
- powershell: |
    foreach ($target in '$(targets)'.Split(',')) {
        Write-Host "Copying files for target '$target'..."
        Copy-Item README.md "$(Build.ArtifactStagingDirectory)/$target"
        Copy-Item LICENSE "$(Build.ArtifactStagingDirectory)/$target"
        Copy-Item THIRD_PARTY_NOTICES "$(Build.ArtifactStagingDirectory)/$target"
        Remove-Item "$(Build.ArtifactStagingDirectory)/$target/*.pdb"
        Compress-Archive -Path "$(Build.ArtifactStagingDirectory)/$target/" "$(Build.ArtifactStagingDirectory)/$target/LicenseCollector-$target-v$(GitVersion.SemVer).zip"
    }
  condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/v')
  displayName: Create Release Packages

- task: GitHubRelease@1
  displayName: Publish to Github Releases
  condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/v')
  inputs:
    gitHubConnection: 'Github'
    repositoryName: '$(Build.Repository.Name)'
    action: 'edit'
    target: '$(Build.SourceVersion)'
    tag: '$(Build.SourceBranchName)'
    title: 'Product Release $(GitVersion.SemVer)'
    releaseNotesSource: 'inline'
    assets: '$(Build.ArtifactStagingDirectory)/**/*.zip'
    changeLogCompareToRelease: 'lastFullRelease'
    changeLogType: 'commitBased'